import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import Banner from "../components/banner";
import Card from "../components/card";
import { fetchCoffeeStores } from "../lib/coffee-stores";
import useTrackLocation from "../hooks/use-track-location";
import { useContext, useEffect, useState } from "react";
import { StoreContext, ACTION_TYPES } from "../context/store-context";

export async function getStaticProps(context) {
  const data = await fetchCoffeeStores();
  return {
    props: { coffeestores: data }, // will be passed to the page component as props
  };
}

export default function Home(props) {
  const [locationErrorMsg, handleTrackLocation, locationLoading] =
    useTrackLocation();
  const [coffeeStoresError, setCoffeeStoresError] = useState(null);
  const { state, dispatch } = useContext(StoreContext);
  const { location, coffeeStores } = state;

  useEffect(() => {
    if (location) {
      const fetchData = async () => {
        try {
          const data = await fetch(
            "/api/getCoffeeStoresByLocation?location=" + location
          ).then((res) => res.json());
          dispatch({ type: ACTION_TYPES.SET_COFFEE_STORES, payload: data });
          setCoffeeStoresError(null);
        } catch (e) {
          console.log("error", e);
          setCoffeeStoresError(e.message);
        }
      };

      fetchData();
    }
  }, [location,dispatch]);

  const handleBannerBtnClick = () => {
    handleTrackLocation();
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Coffee Expert</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <main className={styles.main}>
        <Banner
          buttonText={locationLoading ? "Loading..." : "View Stores Nearby"}
          handleOnClick={handleBannerBtnClick}
          disb={locationLoading}
        />
        {locationErrorMsg && (
          <div className={styles.errorMsg}>{locationErrorMsg}</div>
        )}
        {coffeeStoresError && (
          <div className={styles.errorMsg}>{coffeeStoresError}</div>
        )}
        <Image
          className={styles.heroImage}
          src="/coffee_bag.png"
          alt="coffee"
          width={850}
          height={600}
        />
        {coffeeStores.length > 0 && (
          <>
            <h2 className={styles.cardHeader}>Coffee Stores near you</h2>
            <div className={styles.cardLayout}>
              {coffeeStores.map((store) => (
                <Card
                  key={store.id}
                  name={store.name}
                  image={store.imgUrl || null}
                  href={`/coffee-store/${store.id}`}
                />
              ))}
            </div>
          </>
        )}

        {props.coffeestores.length > 0 && coffeeStores.length < 1 && (
          <>
            <h2 className={styles.cardHeader}>Vienna Coffee Stores</h2>
            <div className={styles.cardLayout}>
              {props.coffeestores.map((store) => (
                <Card
                  key={store.id}
                  name={store.name}
                  image={store.imgUrl || null}
                  href={`/coffee-store/${store.id}`}
                />
              ))}
            </div>
          </>
        )}
      </main>
    </div>
  );
}
