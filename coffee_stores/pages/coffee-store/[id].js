import { useRouter } from "next/router";
import Link from "next/link";
import coffestoresData from "../../data/coffee-stores.json";
import Head from "next/head";
import styles from "../../styles/coffee-store.module.css";
import Image from "next/image";
import cls from "classnames";
import star from "../../public/star.svg";
import nearMe from "../../public/nearMe.svg";
import places from "../../public/places.svg";
import { fetchCoffeeStores } from "../../lib/coffee-stores";
import { useContext, useEffect, useState } from "react";
import { StoreContext } from "../../context/store-context";
import { isEmpty } from "../../utils";

export async function getStaticProps(context) {
  const data = await fetchCoffeeStores();
  const found = data.find((store) => store.fsq_id == context.params.id);

  return {
    props: {
      storesFromGSP: found ? found : {},
    }, // will be passed to the page component as props
  };
}

export async function getStaticPaths() {
  const data = await fetchCoffeeStores();
  return {
    paths: data.map((store) => ({
      params: { id: store.fsq_id.toString() },
    })),
    fallback: true,
  };
}

const CoffeStore = (props) => {
  const router = useRouter();
  const id = router.query.id;

  const [store, setCoffeeStores] = useState(props.storesFromGSP);

  console.log("store", store);
  const { state } = useContext(StoreContext);
  const { coffeeStores } = state;

  console.log("coffeeStores", coffeeStores);

  useEffect(() => {
    if (isEmpty(props.storesFromGSP)) {
      if (coffeeStores.length > 0) {
        const found = coffeeStores.find((store) => store.fsq_id == id);
        setCoffeeStores(found);
      }
    }
  }, [id]);

  if (router.isFallback) {
    return <div>Loading...</div>;
  }

  const handleUpvoteButton = () => {
    console.log("Upvote button clicked");
  };

  console.log(id);
  return (
    <div className={styles.layout}>
      <Head>
        <title>{store.name}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.container}>
        <div className={styles.col1}>
          <div className={styles.backToHomeLink}>
            <Link href="/">&#060;- Back to Home</Link>
          </div>
          <div className={styles.nameWrapper}>
            <h1 className={styles.name}>{store.name || ""}</h1>
          </div>
          <Image
            src={store.imgUrl || ""}
            alt={store.name}
            width={600}
            height={500}
            className={styles.storeImg}
          ></Image>
        </div>
        <div className={cls("glassWithoutHover", styles.col2)}>
          <div className={styles.iconWrapper}>
            <Image src={places} width={24} height={24} />
            <p className={styles.text}>
              {store.location?.formatted_address || ""}
            </p>
          </div>

          <div className={styles.iconWrapper}>
            <Image src={nearMe} width={24} height={24} />
            <p className={styles.text}>{store.location?.country || ""}</p>
          </div>

          <div className={styles.iconWrapper}>
            <Image src={star} width={24} height={24} />
            <p className={styles.text}>1</p>
          </div>

          <button className={styles.upvoteButton} onClick={handleUpvoteButton}>
            Up vote!
          </button>
        </div>
      </div>
    </div>
  );
};

export default CoffeStore;
